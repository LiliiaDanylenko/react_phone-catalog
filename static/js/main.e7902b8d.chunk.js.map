{"version":3,"sources":["hooks.ts/localStorage.ts","LocalContext.tsx","helpers/helper.ts","components/Search/Search.tsx","App.tsx","components/Slider/Slider.tsx","components/CardButtons/CardButtons.tsx","components/ProductCard/ProductCard.tsx","helpers/htmlClient.ts","components/ProductsSlider/ProductsSlider.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","helpers/constants.ts","components/ProductsList/ProductsList.tsx","components/Loader/Loader.tsx","components/Breadcrumbs/Breadcrumbs.tsx","components/NoSearchResults/NoSearchResults.tsx","components/Pagination/Pagination.tsx","pages/PhonesPage.tsx","components/UnderDevelopment/UnderDevelopment.tsx","pages/TabletsPage.tsx","pages/AccessoriesPage.tsx","components/NoResults/NoResults.tsx","pages/Favorites.tsx","components/Back/Back.tsx","pages/Cart.tsx","pages/ProductDetailsPage.tsx","Root.tsx","index.tsx"],"names":["useLocalStorage","key","startValue","useState","data","localStorage","getItem","JSON","parse","removeItem","value","setValue","newValue","setItem","stringify","LocalContext","React","createContext","favorites","setFavorites","cart","setCart","LocalProvider","children","Provider","getNumber","from","to","numbers","i","push","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","delete","Array","isArray","part","append","set","Search","pathname","useLocation","useSearchParams","searchParams","setSearchParams","inputRef","useRef","get","query","setQuery","useEffect","applyQuery","useCallback","debounce","className","ref","type","placeholder","slice","onChange","event","newQuery","target","onBlur","relatedTarget","id","classNames","onClick","current","focus","getNavLinkClass","isActive","getIconLinkClass","App","useContext","search","handleScroll","window","scrollTo","top","behavior","src","alt","length","state","images","IMAGE_WIDTH","Slider","currentImage","setCurrentImage","currentWidth","setCurrentWidth","handleNext","index","findIndex","image","handlePrev","interval","setInterval","clearInterval","map","link","split","style","transform","transition","handleClick","CardButtons","card","info","isAddedToCart","useMemo","find","quantity","product","disabled","filter","ProductCard","name","price","fullPrice","screen","capacity","ram","phoneId","replace","url","getProducts","fetch","then","response","ok","Error","json","getPhones","res","category","CARD_WIDTH","FULL_VISIBLE_WIDTH","ProductsSlider","memo","section","useParams","currentPropducts","setCurrentPropducts","fullWidth","setFullWidth","isDisabledPrev","setIsDisabledPrev","isDisabledNext","setIsDisabledNext","sort","productFirst","productSecond","first","gettedPhones","year","preventDefault","currentNumber","resultWidth","phone","HomePage","phones","setPhones","NotFoundPage","DEFAULT_PER_PAGE","ProductsList","products","start","end","Loader","Breadcrumbs","currentPage","params","crumb","Fragment","join","title","letter","toUpperCase","NoSearchResults","Pagination","countPagination","selectedPage","togglePage","count","page","e","number","SortBy","Newest","Alphabetically","Cheapest","items","PhonesPage","isLoading","setIsLoading","isOpen","setIsOpen","currentPhones","newPhones","second","localeCompare","toLowerCase","includes","countPage","Math","ceil","finally","selectedSort","currentValue","keys","handleClickOnDropdown","handleBlur","classList","contains","option","item","perPage","UnderDevelopment","TabletsPage","AccessoriesPage","NoResults","Favorites","filteredFavorites","newFavorites","favorite","Back","Cart","checkout","setCheckout","totalAmount","reduce","prev","totalQuantity","handleDelete","handleMinus","handlePlus","usableColors","black","coral","gold","green","midnightgreen","purple","red","rosegold","silver","spacegray","white","yellow","ProductDetailsPage","productId","setCard","setProduct","mainImage","setMainImage","isError","setIsError","findCard","catch","handleColor","color","namespaceId","handleCapacity","colorsAvailable","backgroundColor","capacityAvailable","priceDiscount","priceRegular","resolution","processor","description","desc","text","camera","zoom","cell","Root","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7902b8d.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport function useLocalStorage<T>(\n  key: string, startValue: T,\n): [T, (v: T) => void] {\n  const [value, setValue] = useState(() => {\n    const data = localStorage.getItem(key);\n\n    if (data === null) {\n      return startValue;\n    }\n\n    try {\n      return JSON.parse(data);\n    } catch {\n      localStorage.removeItem(key);\n\n      return startValue;\n    }\n  });\n\n  const save = (newValue: T) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, save];\n}\n","import React from 'react';\nimport { Phone } from './types/Phone';\nimport { useLocalStorage } from './hooks.ts/localStorage';\nimport { CartItem } from './types/CartItem';\n\ntype LocalContextType = {\n  favorites: Phone[],\n  setFavorites: (v: Phone[]) => void,\n  cart: CartItem[],\n  setCart: (v: CartItem[]) => void,\n};\n\nexport const LocalContext = React.createContext<LocalContextType>({\n  favorites: [],\n  setFavorites: () => {},\n  cart: [],\n  setCart: () => {},\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const LocalProvider: React.FC<Props> = ({ children }) => {\n  const [favorites, setFavorites] = useLocalStorage<Phone[]>('favorites', []);\n  const [cart, setCart] = useLocalStorage<CartItem[]>('cart', []);\n\n  const value = {\n    favorites,\n    setFavorites,\n    cart,\n    setCart,\n  };\n\n  return (\n    <LocalContext.Provider value={value}>\n      {children}\n    </LocalContext.Provider>\n  );\n};\n","export function getNumber(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let i = from; i <= to; i += 1) {\n    numbers.push(i);\n  }\n\n  return numbers;\n}\n\ntype SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport classNames from 'classnames';\nimport './Search.scss';\nimport { getSearchWith } from '../../helpers/helper';\n\nexport const Search = () => {\n  const { pathname } = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [query, setQuery] = useState(searchParams.get('query') || '');\n\n  useEffect(() => {\n    setQuery(searchParams.get('query') || '');\n    setSearchParams(getSearchWith(\n      searchParams, { query: searchParams.get('query') || null },\n    ));\n  }, [pathname]);\n\n  const applyQuery = useCallback(debounce(setSearchParams, 1000), [pathname]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n\n    if (!newQuery) {\n      setQuery('');\n      applyQuery(getSearchWith(\n        searchParams, { query: null },\n      ));\n\n      return;\n    }\n\n    setQuery(newQuery);\n    applyQuery(getSearchWith(\n      searchParams, { query: newQuery },\n    ));\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    if (event.relatedTarget && event.relatedTarget.id === 'button') {\n      // eslint-disable-next-line no-useless-return\n      return;\n    }\n  };\n\n  const handleClickButton = () => {\n    if (query) {\n      setQuery('');\n      setSearchParams(getSearchWith(\n        searchParams, { query: null },\n      ));\n\n      return;\n    }\n\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div className=\"search\">\n      <input\n        ref={inputRef}\n        value={query}\n        type=\"text\"\n        className=\"search__input\"\n        placeholder={`Search in ${pathname.slice(1)}...`}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n      <button\n        type=\"button\"\n        id=\"button\"\n        className={classNames(\n          'search__button', { 'search__button--focus': !!query },\n        )}\n        onClick={handleClickButton}\n      />\n    </div>\n  );\n};\n","import { useContext } from 'react';\nimport {\n  Link,\n  NavLink,\n  useLocation,\n  Outlet,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { LocalContext } from './LocalContext';\nimport { Search } from './components/Search';\n\nconst getNavLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'nav__link',\n  { 'active-link': isActive },\n);\n\nconst getIconLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'header__icon',\n  { 'active-link': isActive },\n);\n\nconst App = () => {\n  const { favorites, cart } = useContext(LocalContext);\n  const { pathname, search } = useLocation();\n\n  const handleScroll = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"header__left\">\n          <div className=\"logo header__logo\">\n            <Link to=\"/\" className=\"logo__link\">\n              <img src=\"./image/logo.svg\" alt=\"logo\" />\n            </Link>\n          </div>\n          {pathname !== '/cart' && (\n            <nav className=\"nav\">\n              <NavLink to=\"/\" className={getNavLinkClass}>\n                Home\n              </NavLink>\n              <NavLink to=\"/phones\" className={getNavLinkClass}>\n                Phones\n              </NavLink>\n              <NavLink to=\"/tablets\" className={getNavLinkClass}>\n                Tablets\n              </NavLink>\n              <NavLink to=\"/accessories\" className={getNavLinkClass}>\n                Accessories\n              </NavLink>\n            </nav>\n          )}\n        </div>\n\n        <div className=\"header__right\">\n          {(pathname === '/phones'\n            || pathname === '/tablets'\n            || pathname === '/accessories'\n            || pathname === '/favorites') && (\n            <Search />\n          )}\n\n          {pathname !== '/cart' && (\n            <NavLink to=\"/favorites\" className={getIconLinkClass}>\n              <img\n                src=\"./image/favorites.svg\"\n                alt=\"favorites\"\n                className=\"header__image\"\n              />\n              {pathname === '/favorites' && favorites.length !== 0 && (\n                <span className=\"header__count\">\n                  {favorites.length}\n                </span>\n              )}\n            </NavLink>\n          )}\n\n          <NavLink\n            to=\"/cart\"\n            className={getIconLinkClass}\n            state={{ pathname, search }}\n          >\n            <img\n              src=\"./image/cart.svg\"\n              alt=\"cart\"\n              className=\"header__image\"\n            />\n            {pathname === '/cart' && cart.length !== 0 && (\n              <span className=\"header__count\">\n                {cart.length}\n              </span>\n            )}\n          </NavLink>\n        </div>\n      </header>\n\n      <Outlet />\n\n      <footer className=\"footer\">\n        <div className=\"footer__content\">\n          <Link to=\"/\" className=\"logo\">\n            <img src=\"./image/logo.svg\" alt=\"logo\" />\n          </Link>\n\n          <nav className=\"nav\">\n            <Link\n              to=\"https://github.com/LiliiaDanylenko\"\n              className=\"nav__link nav__link--footer\"\n            >\n              Github\n            </Link>\n            <Link\n              to=\"/contacts\"\n              className=\"nav__link nav__link--footer\"\n            >\n              Contacts\n            </Link>\n            <Link\n              to=\"/rights\"\n              className=\"nav__link nav__link--footer\"\n            >\n              Rights\n            </Link>\n          </nav>\n\n          <div className=\"back-to-top\">\n            <Link\n              to={{ pathname }}\n              className=\"back-to-top__text\"\n              onClick={handleScroll}\n            >\n              Back to top\n            </Link>\n            <Link\n              to={{ pathname }}\n              className=\"icon icon--back-to-top\"\n              onClick={handleScroll}\n            >\n              <img\n                src=\"./image/arrow-up.svg\"\n                alt=\"arrow\"\n                className=\"icon__arrow\"\n              />\n            </Link>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import {\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport classNames from 'classnames';\nimport './Slider.scss';\nimport { Link } from 'react-router-dom';\n\nconst images = [\n  '/_new/img/banner-phones.png',\n  '/_new/img/banner-tablets.png',\n  '/_new/img/banner-accessories.png',\n];\n\nconst IMAGE_WIDTH = 1040;\n\nexport const Slider = () => {\n  const [currentImage, setCurrentImage] = useState<string>(images[0]);\n  const [currentWidth, setCurrentWidth] = useState<number>(0);\n\n  const handleNext = useCallback(() => {\n    const index = images.findIndex(image => image === currentImage);\n\n    if (images.length - 1 === index) {\n      setCurrentImage(images[0]);\n      setCurrentWidth(0);\n    } else {\n      setCurrentImage(images[index + 1]);\n      setCurrentWidth(currentWidth + IMAGE_WIDTH);\n    }\n  }, [currentImage, currentWidth]);\n\n  const handlePrev = useCallback(() => {\n    const index = images.findIndex(image => image === currentImage);\n\n    if (index === 0) {\n      setCurrentImage(images[images.length - 1]);\n      setCurrentWidth((images.length - 1) * IMAGE_WIDTH);\n    } else {\n      setCurrentImage(images[index - 1]);\n      setCurrentWidth(currentWidth - IMAGE_WIDTH);\n    }\n  }, [currentImage, currentWidth]);\n\n  const handleClick = (i: number) => {\n    setCurrentImage(images[i]);\n    setCurrentWidth(i * IMAGE_WIDTH);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(handleNext, 5000);\n\n    return () => clearInterval(interval);\n  }, [currentImage, currentWidth]);\n\n  return (\n    <div className=\"slider\">\n      <div className=\"slider__wrapper\">\n        <button\n          type=\"button\"\n          className=\"slider__btn slider__btn-prev\"\n          onClick={handlePrev}\n        >\n          <img src=\"/image/arrow-left.svg\" alt=\"\" />\n        </button>\n\n        <div className=\"slider__image-wrapper\">\n          {images.map(image => {\n            const link = image.split('-')[1].split('.')[0];\n\n            return (\n              <div\n                key={image}\n                style={{\n                  transform: `translateX(-${currentWidth}px)`,\n                  transition: 'transform 1.5s',\n                }}\n              >\n                <Link to={`/${link}`}>\n                  <img\n                    src={image}\n                    alt={image}\n                    className=\"slider__image\"\n                  />\n                </Link>\n              </div>\n            );\n          })}\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"slider__btn slider__btn-next\"\n          onClick={handleNext}\n        >\n          <img src=\"/image/arrow-right.svg\" alt=\"\" />\n        </button>\n      </div>\n\n      <div className=\"slider__dots\">\n        {images.map((image, i) => (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            key={image}\n            type=\"button\"\n            className={classNames(\n              'slider__button',\n              { 'slider__button-active': currentImage === image },\n            )}\n            onClick={() => handleClick(i)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { useContext, useMemo } from 'react';\nimport classNames from 'classnames';\nimport './CardButtons.scss';\nimport { Phone } from '../../types/Phone';\nimport { LocalContext } from '../../LocalContext';\n\ntype Props = {\n  card: Phone;\n  info: 'card' | 'detail';\n};\n\nexport const CardButtons: React.FC<Props> = ({ card, info }) => {\n  const {\n    favorites, setFavorites, cart, setCart,\n  } = useContext(LocalContext);\n\n  const isAddedToCart = useMemo(() => (\n    cart.find(value => value.id === card.id)\n  ), [cart]);\n\n  const handleClickCart = () => {\n    if (!isAddedToCart) {\n      setCart([...cart, { id: card.id, quantity: 1, product: card }]);\n    }\n  };\n\n  const handleClickFavorites = () => {\n    if (favorites.find(value => value.id === card.id)) {\n      setFavorites(favorites.filter(value => value.id !== card.id));\n    } else {\n      setFavorites([...favorites, card]);\n    }\n  };\n\n  return (\n    <div className=\"card-buttons\">\n      <button\n        type=\"button\"\n        className={classNames(\n          'card-buttons__cart',\n          {\n            'card-buttons__cart--detail': info === 'detail',\n            'card-buttons__cart--selected': isAddedToCart,\n          },\n        )}\n        onClick={handleClickCart}\n        disabled={!!isAddedToCart}\n      >\n        {isAddedToCart\n          ? 'Added to cart'\n          : 'Add to cart'}\n      </button>\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'card-buttons__favorite',\n          {\n            'card-buttons__favorite--detail': info === 'detail',\n            'card-buttons__favorite--selected':\n            favorites.find(value => value.id === card.id),\n          },\n        )}\n        onClick={handleClickFavorites}\n        data-cy=\"addToFavorite\"\n      />\n    </div>\n  );\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport './ProductCard.scss';\nimport { Phone } from '../../types/Phone';\nimport { CardButtons } from '../CardButtons';\n\ntype Props = {\n  card: Phone;\n};\n\nexport const ProductCard: React.FC<Props> = ({ card }) => {\n  const { pathname, search } = useLocation();\n  const {\n    image,\n    name,\n    price,\n    fullPrice,\n    screen,\n    capacity,\n    ram,\n    phoneId,\n  } = card;\n\n  return (\n    <div className=\"card\">\n      <Link\n        to={`/phones/${phoneId}`}\n        state={{ pathname, search }}\n      >\n        <img\n          className=\"card__image\"\n          src={`./_new/${image}`}\n          alt={name}\n        />\n      </Link>\n\n      <Link\n        to={`/phones/${phoneId}`}\n        state={{ pathname, search }}\n        className=\"card__name\"\n      >\n        {name}\n      </Link>\n\n      <div className=\"card__prices\">\n        <h2 className=\"card__price\">{`$${price}`}</h2>\n        {fullPrice !== 0 && (\n          <div className=\"card__full-price\">{`$${fullPrice}`}</div>\n        )}\n      </div>\n\n      <div className=\"card__line\" />\n\n      <div className=\"card__info-wrapper\">\n        <div className=\"card__info\">\n          <div className=\"card__char-name\">Screen</div>\n          <div className=\"card__char\">{screen}</div>\n        </div>\n        <div className=\"card__info\">\n          <div className=\"card__char-name\">Capacity</div>\n          <div className=\"card__char\">{capacity.replace('GB', ' GB')}</div>\n        </div>\n        <div className=\"card__info\">\n          <div className=\"card__char-name\">RAM</div>\n          <div className=\"card__char\">{ram.replace('GB', ' GB')}</div>\n        </div>\n      </div>\n\n      <CardButtons card={card} info=\"card\" />\n    </div>\n  );\n};\n","import { Phone } from '../types/Phone';\n\n// eslint-disable-next-line max-len\nconst url = 'https://mate-academy.github.io/react_phone-catalog/_new/products';\n\nexport const getProducts = () => {\n  return fetch(`${url}.json`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPhones = () => {\n  return getProducts()\n    .then(res => res.filter((product: Phone) => product.category === 'phones'));\n};\n\nexport const getPhone = (id: string) => {\n  return fetch(`${url}/${id}.json`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n};\n\nexport const getHotPriceProducts = () => {\n  return getProducts()\n    .then((res: Phone[]) => {\n      return [...res]\n        .sort((productFirst, productSecond) => {\n          const first = productFirst.fullPrice - productFirst.price;\n          const second = productSecond.fullPrice - productSecond.price;\n\n          return second - first;\n        });\n    });\n};\n\nexport const getBrandNewProducts = () => {\n  return getProducts()\n    .then((res: Phone[]) => {\n      const gettedPhones: Phone[] = [...res]\n        .sort((productFirst, productSecond) => {\n          return productSecond.year - productFirst.year;\n        });\n\n      return gettedPhones\n        .filter(product => gettedPhones[0].year === product.year)\n        .map(product => ({ ...product, fullPrice: 0 }));\n    });\n};\n\nexport const getSuggestedProducts = () => {\n  return getProducts()\n    .then((res: Phone[]) => {\n      return [...res]\n        .sort((productFirst, productSecond) => {\n          const first = productFirst.fullPrice - productFirst.price;\n          const second = productSecond.fullPrice - productSecond.price;\n\n          return second - first;\n        });\n    });\n};\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Phone } from '../../types/Phone';\nimport { ProductCard } from '../ProductCard';\nimport {\n  getBrandNewProducts,\n  getHotPriceProducts,\n  getSuggestedProducts,\n} from '../../helpers/htmlClient';\n\ntype Props = {\n  section: 'Hot prices' | 'Brand new models' | 'You may also like',\n};\n\nconst GAP = 16;\nconst CARD_WIDTH = 272;\nconst FULL_VISIBLE_WIDTH = 1136;\n\nexport const ProductsSlider: React.FC<Props> = React.memo(({ section }) => {\n  const { pathname } = useParams();\n  const [currentPropducts, setCurrentPropducts] = useState<Phone[]>([]);\n  const [fullWidth, setFullWidth] = useState(0);\n  const [currentWidth, setCurrentWidth] = useState(0);\n  const [isDisabledPrev, setIsDisabledPrev] = useState(true);\n  const [isDisabledNext, setIsDisabledNext] = useState(false);\n\n  useEffect(() => {\n    switch (section) {\n      case 'Hot prices':\n        getHotPriceProducts()\n          .then(res => {\n            setCurrentPropducts(res);\n            setFullWidth((res.length - 1) * (CARD_WIDTH + GAP) + CARD_WIDTH);\n          });\n        break;\n\n      case 'Brand new models':\n        getBrandNewProducts()\n          .then(res => {\n            setCurrentPropducts(res);\n            setFullWidth((res.length - 1) * (CARD_WIDTH + GAP) + CARD_WIDTH);\n          });\n        break;\n\n      case 'You may also like':\n        getSuggestedProducts()\n          .then(res => {\n            setCurrentPropducts(res);\n            setFullWidth((res.length - 1) * (CARD_WIDTH + GAP) + CARD_WIDTH);\n          });\n\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n\n  const handlePrev = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    if (isDisabledPrev) {\n      event.preventDefault();\n\n      return;\n    }\n\n    setIsDisabledNext(false);\n    setCurrentWidth(currentNumber => {\n      const resultWidth = currentNumber - FULL_VISIBLE_WIDTH - GAP;\n\n      if (resultWidth > 0) {\n        return resultWidth;\n      }\n\n      setIsDisabledPrev(true);\n\n      return 0;\n    });\n  };\n\n  const handleNext = (\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    if (isDisabledNext) {\n      event.preventDefault();\n\n      return;\n    }\n\n    setIsDisabledPrev(false);\n    setCurrentWidth(currentNumber => {\n      const resultWidth = currentNumber + FULL_VISIBLE_WIDTH + GAP;\n\n      if ((fullWidth - resultWidth) > FULL_VISIBLE_WIDTH) {\n        return resultWidth;\n      }\n\n      setIsDisabledNext(true);\n\n      return fullWidth - FULL_VISIBLE_WIDTH;\n    });\n  };\n\n  return (\n    <div data-cy=\"cardsContainer\">\n      <div className=\"main__upper-wrapper\">\n        <h1 className=\"main__title\">{section}</h1>\n\n        <div className=\"main__button-slider\">\n          <Link\n            to={{ pathname }}\n            className={classNames('icon', { 'icon--disabled': isDisabledPrev })}\n            onClick={handlePrev}\n          >\n            {isDisabledPrev ? (\n              <img\n                src=\"/image/arrow-left-disabled.svg\"\n                alt=\"arrow\"\n                className=\"icon__arrow\"\n              />\n            ) : (\n              <img\n                src=\"/image/arrow-left.svg\"\n                alt=\"arrow\"\n                className=\"icon__arrow\"\n              />\n            )}\n          </Link>\n\n          <Link\n            to={{ pathname }}\n            className={classNames('icon', { 'icon--disabled': isDisabledNext })}\n            onClick={handleNext}\n          >\n            {isDisabledNext ? (\n              <img\n                src=\"/image/arrow-right-disabled.svg\"\n                alt=\"arrow\"\n                className=\"icon__arrow\"\n              />\n            ) : (\n              <img\n                src=\"/image/arrow-right.svg\"\n                alt=\"arrow\"\n                className=\"icon__arrow\"\n              />\n            )}\n          </Link>\n        </div>\n      </div>\n\n      {currentPropducts.length > 0 && (\n        <div className=\"phones\">\n          {currentPropducts.map(phone => (\n            <div\n              key={phone.id}\n              style={{\n                transform: `translateX(-${currentWidth}px)`,\n                transition: 'transform 1.5s',\n              }}\n            >\n              <ProductCard card={phone} key={phone.id} />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Phone } from '../types/Phone';\nimport { Slider } from '../components/Slider';\nimport { ProductsSlider } from '../components/ProductsSlider';\nimport { getPhones } from '../helpers/htmlClient';\n\nexport const HomePage = () => {\n  const [phones, setPhones] = useState<Phone[]>([]);\n\n  useEffect(() => {\n    getPhones()\n      .then((res: Phone[]) => {\n        setPhones(res);\n      });\n  }, []);\n\n  return (\n    <main className=\"main\">\n      <section className=\"main__slider\">\n        <Slider />\n      </section>\n\n      <section className=\"main__section\">\n        <ProductsSlider section=\"Hot prices\" />\n      </section>\n\n      <section className=\"main__section\" data-cy=\"categoryLinksContainer\">\n        <div className=\"main__upper-wrapper\">\n          <h1 className=\"main__title\">Shop by category</h1>\n        </div>\n        <div className=\"category\">\n          <div>\n            <Link to=\"/phones\" className=\"category__item\">\n              <img\n                src=\"./_new/img/category-phones.png\"\n                alt=\"phones\"\n                className=\"category__image\"\n              />\n            </Link>\n            <Link to=\"/phones\">\n              <h3 className=\"category__title\">Mobile phones</h3>\n            </Link>\n            <p className=\"category__count\">{`${phones.length} models`}</p>\n          </div>\n          <div>\n            <Link to=\"/tablets\" className=\"category__item\">\n              <img\n                src=\"./_new/img/category-tablets.png\"\n                alt=\"tablets\"\n                className=\"category__image\"\n              />\n            </Link>\n            <Link to=\"/tablets\">\n              <h3 className=\"category__title\">Tablets</h3>\n            </Link>\n            <p className=\"category__count\">0 models</p>\n          </div>\n          <div>\n            <Link to=\"/accessories\" className=\"category__item\">\n              <img\n                src=\"./_new/img/category-accessories.png\"\n                alt=\"accessories\"\n                className=\"category__image\"\n              />\n            </Link>\n            <Link to=\"/accessories\">\n              <h3 className=\"category__title\">Accessories</h3>\n            </Link>\n            <p className=\"category__count\">0 models</p>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"main__section\">\n        <ProductsSlider section=\"Brand new models\" />\n      </section>\n    </main>\n  );\n};\n","import { Link } from 'react-router-dom';\n\nexport const NotFoundPage = () => {\n  return (\n    <main className=\"main main--not-found\">\n      <h1 className=\"main__title main__title--development\">\n        Page not found\n      </h1>\n      <div className=\"main__text\">\n        Perhaps you would like to navigate to the\n        <Link to=\"/\">\n          <span className=\"main__span\"> Home page </span>\n        </Link>\n        ?\n      </div>\n    </main>\n  );\n};\n","export const DEFAULT_SORT = 'Newest';\nexport const DEFAULT_PAGE = '1';\nexport const DEFAULT_PER_PAGE = '16';\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Phone } from '../../types/Phone';\nimport { ProductCard } from '../ProductCard';\nimport { DEFAULT_PAGE, DEFAULT_PER_PAGE } from '../../helpers/constants';\n\ntype Props = {\n  products: Phone[];\n};\n\nexport const ProductsList: React.FC<Props> = React.memo((\n  { products },\n) => {\n  const [searchParams] = useSearchParams();\n  const page = searchParams.get('page') || DEFAULT_PAGE;\n  const count = searchParams.get('perPage') || DEFAULT_PER_PAGE;\n  const start = +page;\n  const end = +count;\n\n  return (\n    <div className=\"phones phones--list\" data-cy=\"productList\">\n      {products.slice(start * end - end, start * end).map(product => (\n        <ProductCard card={product} key={product.id} />\n      ))}\n    </div>\n  );\n});\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"loader\" data-cy=\"loader\">\n    <div className=\"loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Breadcrumbs.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  currentPage: string;\n};\n\nexport const Breadcrumbs: React.FC<Props> = React.memo(({ currentPage }) => {\n  const { pathname } = useLocation();\n  const params = pathname.split('/');\n\n  return (\n    <div className=\"breadcrumbs\" data-cy=\"breadCrumbs\">\n      {params.map((crumb, index) => {\n        if (index === 0) {\n          return (\n            <React.Fragment key={crumb}>\n              <Link to=\"/\" className=\"breadcrumbs__home\">\n                <img src=\"/image/home.svg\" alt=\"home\" />\n              </Link>\n            </React.Fragment>\n          );\n        }\n\n        if (index === params.length - 1 && currentPage) {\n          return (\n            <React.Fragment key={crumb}>\n              <img src=\"/image/arrow-right-disabled.svg\" alt=\"arrow-right\" />\n              <Link\n                to={`/${params.slice(1, index + 1).join('/')}`}\n                className={classNames(\n                  'breadcrumbs__text',\n                  {\n                    'breadcrumbs__text--category':\n                      params.length > 1 && index === 1,\n                  },\n                )}\n              >\n                {currentPage}\n              </Link>\n            </React.Fragment>\n          );\n        }\n\n        const title = crumb.split('-').map((letter) => {\n          return letter[0].toUpperCase() + letter.slice(1);\n        }).join(' ');\n\n        return (\n          <React.Fragment key={crumb}>\n            <img src=\"/image/arrow-right-disabled.svg\" alt=\"arrow-right\" />\n            <Link\n              to={`/${params.slice(1, index + 1).join('/')}`}\n              className={classNames(\n                'breadcrumbs__text',\n                {\n                  'breadcrumbs__text--category':\n                    params.length > 2 && index === 1,\n                },\n              )}\n            >\n              {title}\n            </Link>\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n});\n","export const NoSearchResults = () => (\n  <main className=\"main\">\n    <section className=\"main__no-results\">\n      <h1 className=\"main__title main__title--development\">\n        Sorry! No results found yet...\n      </h1>\n      <img\n        src=\"/image/noResults.png\"\n        alt=\"No results\"\n        className=\"main__no-results-image\"\n      />\n    </section>\n  </main>\n);\n","import React from 'react';\nimport {\n  Link,\n  useSearchParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport './Pagination.scss';\nimport { getNumber, getSearchWith } from '../../helpers/helper';\n\nconst defaultPage = '1';\n\ntype Props = {\n  countPagination: number;\n};\n\nexport const Pagination: React.FC<Props> = React.memo(({ countPagination }) => {\n  const [searchParams] = useSearchParams();\n\n  const selectedPage = searchParams.get('page') || defaultPage;\n  const isDisabledPrev = selectedPage === defaultPage;\n  const isDisabledNext = selectedPage\n    === countPagination.toString();\n\n  const togglePage = (value: string) => {\n    const currentPage = searchParams.get('page');\n    const count = currentPage && +currentPage ? +currentPage : +defaultPage;\n\n    switch (value) {\n      case 'prev':\n        return getSearchWith(searchParams, { page: (count - 1).toString() });\n\n      case 'next':\n        return getSearchWith(searchParams, { page: (count + 1).toString() });\n\n      default:\n        return searchParams;\n    }\n  };\n\n  return (\n    <div className=\"pagination\">\n      <Link\n        to={{\n          search: togglePage('prev').toString(),\n        }}\n        className={classNames(\n          'icon',\n          { 'icon--disabled': isDisabledPrev },\n        )}\n        onClick={(e) => (\n          isDisabledPrev && e.preventDefault()\n        )}\n        data-cy=\"paginationLeft\"\n      >\n        {isDisabledPrev ? (\n          <img\n            src=\"/image/arrow-left-disabled.svg\"\n            alt=\"arrow\"\n            className=\"icon__arrow\"\n          />\n        ) : (\n          <img\n            src=\"/image/arrow-left.svg\"\n            alt=\"arrow\"\n            className=\"icon__arrow\"\n          />\n        )}\n      </Link>\n\n      {getNumber(\n        1, countPagination,\n      )\n        .map(number => (\n          <Link\n            to={{\n              search: getSearchWith(\n                searchParams,\n                { page: number.toString() },\n              ),\n            }}\n            key={number}\n            className={classNames(\n              'pagination__icon',\n              {\n                'pagination__icon--selected':\n                selectedPage === number.toString(),\n              },\n            )}\n          >\n            {number}\n          </Link>\n        ))}\n\n      <Link\n        to={{\n          search: togglePage('next').toString(),\n        }}\n        className={classNames(\n          'icon', { 'icon--disabled': isDisabledNext },\n        )}\n        onClick={(e) => (\n          isDisabledNext && e.preventDefault()\n        )}\n        data-cy=\"paginationRight\"\n      >\n        {isDisabledNext ? (\n          <img\n            src=\"/image/arrow-right-disabled.svg\"\n            alt=\"arrow\"\n            className=\"icon__arrow\"\n          />\n        ) : (\n          <img\n            src=\"/image/arrow-right.svg\"\n            alt=\"arrow\"\n            className=\"icon__arrow\"\n          />\n        )}\n      </Link>\n    </div>\n  );\n});\n","import { useEffect, useMemo, useState } from 'react';\nimport {\n  Link,\n  useSearchParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Phone } from '../types/Phone';\nimport { getPhones } from '../helpers/htmlClient';\nimport { getSearchWith } from '../helpers/helper';\nimport { ProductsList } from '../components/ProductsList';\nimport { Loader } from '../components/Loader';\nimport { Breadcrumbs } from '../components/Breadcrumbs';\nimport { NoSearchResults } from '../components/NoSearchResults';\nimport { Pagination } from '../components/Pagination';\nimport { DEFAULT_PER_PAGE, DEFAULT_SORT } from '../helpers/constants';\n\ntype Sort = {\n  Newest: string,\n  Alphabetically: string,\n  Cheapest: string,\n};\ntype Dropdown = 'Sort by' | 'Items on page' | false;\n\nconst SortBy: Sort = {\n  Newest: 'age',\n  Alphabetically: 'name',\n  Cheapest: 'price',\n};\nconst items = ['4', '8', '16', 'All'];\n\nexport const PhonesPage = () => {\n  const [searchParams] = useSearchParams();\n  const [phones, setPhones] = useState<Phone[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState<Dropdown>(false);\n\n  const currentPhones = useMemo(() => {\n    if (phones.length === 0) {\n      return [];\n    }\n\n    const newPhones = [...phones];\n\n    const value = searchParams.get('sort');\n\n    switch (value) {\n      case 'age':\n        newPhones.sort((first, second) => {\n          return second.year - first.year;\n        });\n\n        break;\n\n      case 'name':\n        newPhones.sort((first, second) => {\n          return first.name.localeCompare(second.name);\n        });\n\n        break;\n\n      case 'price':\n        newPhones.sort((first, second) => {\n          return first.price - second.price;\n        });\n\n        break;\n\n      default:\n        newPhones.sort((first, second) => {\n          return second.year - first.year;\n        });\n\n        break;\n    }\n\n    const query = searchParams.get('query');\n\n    if (query) {\n      return newPhones.filter(phone => (\n        phone.name.toLowerCase().includes(query.toLowerCase())\n      ));\n    }\n\n    return newPhones;\n  }, [searchParams.get('sort'), searchParams.get('query'), phones]);\n\n  const countPagination = useMemo(() => {\n    const count = searchParams.get('perPage');\n    const countPage = count && +count ? +count : +DEFAULT_PER_PAGE;\n\n    return Math.ceil(currentPhones.length / countPage);\n  }, [searchParams.get('perPage'), currentPhones]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPhones()\n      .then((res: Phone[]) => {\n        setPhones(res);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const selectedSort = useMemo(() => {\n    const currentValue = searchParams.get('sort');\n\n    return Object.keys(SortBy).find(sort => (\n      SortBy[sort as keyof Sort] === currentValue\n    )) || DEFAULT_SORT;\n  }, [searchParams.get('sort')]);\n\n  const handleClickOnDropdown = (value: Dropdown) => {\n    setIsOpen(currentValue => {\n      return currentValue === value ? false : value;\n    });\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLButtonElement, Element>) => {\n    if (\n      event.relatedTarget\n      && event.relatedTarget.classList.contains('dropdown__link')\n    ) {\n      return;\n    }\n\n    setIsOpen(false);\n  };\n\n  if (phones.length !== 0 && currentPhones.length === 0) {\n    return (<NoSearchResults />);\n  }\n\n  return (\n    <main className=\"main\">\n      {searchParams.get('query') ? (\n        <div className=\"main__header main__header--results\">\n          <div className=\"main__description\">\n            {`${currentPhones.length} result${currentPhones.length === 1 ? '' : 's'}`}\n          </div>\n        </div>\n      ) : (\n        <div className=\"main__header\">\n          <Breadcrumbs currentPage=\"Phones\" />\n\n          <h1 className=\"main__title main__title--page\">Mobile phones</h1>\n\n          {!isLoading && phones.length !== 0 && (\n            <div className=\"main__description\">\n              {`${phones.length} models`}\n            </div>\n          )}\n        </div>\n      )}\n\n      {isLoading && (<Loader />)}\n\n      {!isLoading && currentPhones.length !== 0 && (\n        <section className=\"main__section\">\n          {!searchParams.get('query') && (\n            <div className=\"main__dropdown dropdown\">\n              <div className=\"dropdown__menu\">\n                <div className=\"dropdown__trigger\">\n                  <div className=\"dropdown__description\">Sort by</div>\n                  <button\n                    type=\"button\"\n                    className=\"dropdown__button\"\n                    onClick={() => handleClickOnDropdown('Sort by')}\n                    onBlur={handleBlur}\n                  >\n                    <span className=\"dropdown__text\">\n                      {selectedSort}\n                    </span>\n                    <span className=\"dropdown__icon\">\n                      {isOpen === 'Sort by' ? (\n                        <img src=\"/image/arrow-up.svg\" alt=\"arrow-up\" />\n                      ) : (\n                        <img src=\"/image/arrow-down.svg\" alt=\"arrow-down\" />\n                      )}\n                    </span>\n                  </button>\n                </div>\n\n                <div\n                  className={classNames(\n                    'dropdown__content',\n                    { 'dropdown__content--open': isOpen === 'Sort by' },\n                  )}\n                >\n                  {Object.keys(SortBy).map(option => (\n                    <div key={option} className=\"dropdown__item\">\n                      <Link\n                        to={{\n                          search: getSearchWith(\n                            searchParams,\n                            { sort: SortBy[option as keyof Sort] },\n                          ).toString(),\n                        }}\n                        className={classNames(\n                          'dropdown__link',\n                          { 'dropdown__link--active': isOpen === 'Sort by' },\n                        )}\n                        onClick={() => setIsOpen(false)}\n                      >\n                        {option}\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"dropdown__menu\">\n                <div className=\"dropdown__trigger\">\n                  <div className=\"dropdown__description\">Items on page</div>\n                  <button\n                    type=\"button\"\n                    className=\"dropdown__button dropdown__button--count\"\n                    onClick={() => handleClickOnDropdown('Items on page')}\n                    onBlur={handleBlur}\n                  >\n                    <span className=\"dropdown__text\">\n                      {searchParams.get('perPage') || DEFAULT_PER_PAGE}\n                    </span>\n                    <span className=\"dropdown__icon\">\n                      {isOpen === 'Items on page' ? (\n                        <img src=\"/image/arrow-up.svg\" alt=\"arrow-up\" />\n                      ) : (\n                        <img src=\"/image/arrow-down.svg\" alt=\"arrow-down\" />\n                      )}\n                    </span>\n                  </button>\n                </div>\n                <div\n                  className={classNames(\n                    'dropdown__content dropdown__content--count',\n                    { 'dropdown__content--open': isOpen === 'Items on page' },\n                  )}\n                >\n                  {items.map(item => (\n                    <div key={item} className=\"dropdown__item\">\n                      <Link\n                        to={{\n                          search: getSearchWith(\n                            searchParams, { page: '1', perPage: item },\n                          ).toString(),\n                        }}\n                        className={classNames(\n                          'dropdown__link',\n                          {\n                            'dropdown__link--active':\n                              isOpen === 'Items on page',\n                          },\n                        )}\n                        onClick={() => setIsOpen(false)}\n                      >\n                        {item}\n                      </Link>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          <ProductsList\n            products={currentPhones}\n          />\n\n          {searchParams.get('perPage') !== 'All'\n            && countPagination > 1 && (\n            <Pagination countPagination={countPagination} />\n          )}\n        </section>\n      )}\n    </main>\n  );\n};\n","import { Link } from 'react-router-dom';\n\ntype Props = {\n  page: string;\n};\n\nexport const UnderDevelopment: React.FC<Props> = ({ page }) => (\n  <main className=\"main main--not-found\">\n    <h1 className=\"main__title\">\n      Oops!\n    </h1>\n    <div className=\"main__text\">\n      Apologies for the inconvenience, but the\n      <span className=\"main__span\">\n        {` ${page} `}\n      </span>\n      are not available yet!\n      <br />\n      We appreciate your understanding.\n    </div>\n    <div className=\"main__text\">\n      Perhaps you would like to navigate to the\n      <Link to=\"/\">\n        <span className=\"main__span\"> Home page </span>\n      </Link>\n      ?\n    </div>\n  </main>\n);\n","import { UnderDevelopment } from '../components/UnderDevelopment';\n\nexport const TabletsPage = () => (\n  <UnderDevelopment page=\"tablets\" />\n);\n","import { UnderDevelopment } from '../components/UnderDevelopment';\n\nexport const AccessoriesPage = () => (\n  <UnderDevelopment page=\"accessories\" />\n);\n","type Props = {\n  category: string\n};\n\nexport const NoResults: React.FC<Props> = ({ category }) => {\n  return (\n    <section className=\"main__no-results\">\n      <h1 className=\"main__title main__title--development\">\n        {`Your ${category} is empty`}\n      </h1>\n      <img\n        src=\"/image/noResults.png\"\n        alt=\"No results\"\n        className=\"main__no-results-image\"\n      />\n    </section>\n  );\n};\n","import { useContext, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { LocalContext } from '../LocalContext';\nimport { NoResults } from '../components/NoResults';\nimport { Breadcrumbs } from '../components/Breadcrumbs';\nimport { ProductsList } from '../components/ProductsList';\nimport { NoSearchResults } from '../components/NoSearchResults';\n\nexport const Favorites = () => {\n  const [searchParams] = useSearchParams();\n  const { favorites } = useContext(LocalContext);\n\n  const filteredFavorites = useMemo(() => {\n    if (favorites.length === 0) {\n      return [];\n    }\n\n    const newFavorites = [...favorites];\n\n    const query = searchParams.get('query');\n\n    if (query) {\n      return newFavorites.filter(favorite => (\n        favorite.name.toLowerCase().includes(query.toLowerCase())\n      ));\n    }\n\n    return newFavorites;\n  }, [searchParams.get('query'), favorites]);\n\n  if (favorites.length !== 0 && filteredFavorites.length === 0) {\n    return (<NoSearchResults />);\n  }\n\n  return (\n    <main className=\"main main--page\">\n      {searchParams.get('query') && favorites.length !== 0 && (\n        <div className=\"main__header main__header--results\">\n          <div className=\"main__description\">\n            {`${filteredFavorites.length} result${filteredFavorites.length === 1 ? '' : 's'}`}\n          </div>\n        </div>\n      )}\n\n      {(!searchParams.get('query') || favorites.length === 0) && (\n        <div className=\"main__header\">\n          <Breadcrumbs currentPage=\"Favorites\" />\n\n          <h1 className=\"main__title main__title--page\">Favorites</h1>\n\n          {favorites.length !== 0 && (\n            <div className=\"main__description\">\n              {`${favorites.length} item${favorites.length !== 1 ? 's' : ''}`}\n            </div>\n          )}\n        </div>\n      )}\n\n      {favorites.length === 0 && (<NoResults category=\"favorites\" />)}\n\n      {filteredFavorites.length !== 0 && (\n        <section className=\"main__section\">\n          <ProductsList products={filteredFavorites} />\n        </section>\n      )}\n    </main>\n  );\n};\n","import React from 'react';\nimport {\n  Link,\n  useLocation,\n} from 'react-router-dom';\nimport './Back.scss';\n\nexport const Back = React.memo(() => {\n  const { state } = useLocation();\n\n  return (\n    <Link\n      to={{\n        pathname: state?.pathname || '..',\n        search: state?.search,\n      }}\n      className=\"back\"\n      data-cy=\"backButton\"\n    >\n      <img\n        src=\"./image/arrow-left.svg\"\n        alt=\"arrow\"\n        className=\"back__arrow\"\n      />\n      <span className=\"back__text\">\n        Back\n      </span>\n    </Link>\n  );\n});\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport { useContext, useMemo, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { CartItem } from '../types/CartItem';\nimport { LocalContext } from '../LocalContext';\nimport { NoResults } from '../components/NoResults';\nimport { Back } from '../components/Back';\n\nexport const Cart = () => {\n  const { cart, setCart } = useContext(LocalContext);\n  const [checkout, setCheckout] = useState(false);\n\n  const totalAmount = useMemo(() => {\n    return cart.reduce((prev, card) => (\n      prev + (card.product.price * card.quantity)\n    ), 0);\n  }, [cart]);\n\n  const totalQuantity = useMemo(() => {\n    return cart.reduce((prev, card) => prev + card.quantity, 0);\n  }, [cart]);\n\n  const handleDelete = (id: string) => {\n    setCart(cart.filter(card => card.id !== id));\n  };\n\n  const handleMinus = (card: CartItem) => {\n    setCart(cart.map(item => {\n      if (item.id === card.id) {\n        return {\n          ...card,\n          quantity: card.quantity - 1,\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  const handlePlus = (card: CartItem) => {\n    setCart(cart.map(item => {\n      if (item.id === card.id) {\n        return {\n          ...card,\n          quantity: card.quantity + 1,\n        };\n      }\n\n      return item;\n    }));\n  };\n\n  return (\n    <main className=\"main\">\n      <div className=\"main__header\">\n        <Back />\n\n        <h1 className=\"main__title\">Cart</h1>\n      </div>\n\n      {cart.length === 0 && (<NoResults category=\"cart\" />)}\n\n      {cart.length !== 0 && (\n        <section className=\"main__cart cart\">\n          <div className=\"cart__list\">\n            {cart.map(card => {\n              const {\n                id,\n                quantity,\n                product,\n              } = card;\n              const {\n                image,\n                name,\n                price,\n                phoneId,\n              } = product;\n\n              return (\n                <div className=\"cart__card\" key={id}>\n                  <button\n                    type=\"button\"\n                    className=\"cart__close\"\n                    onClick={() => handleDelete(id)}\n                    data-cy=\"cartDeleteButton\"\n                  />\n\n                  <Link\n                    to={`/phones/${phoneId}`}\n                    className=\"cart__image-wrapper\"\n                  >\n                    <img\n                      className=\"cart__image\"\n                      src={`./_new/${image}`}\n                      alt={name}\n                    />\n                  </Link>\n\n                  <Link\n                    to={`/phones/${phoneId}`}\n                    className=\"cart__name\"\n                  >\n                    {`${name}`}\n                  </Link>\n\n                  <div className=\"cart__buttons\">\n                    <button\n                      type=\"button\"\n                      className={classNames(\n                        'cart__button cart__button--minus',\n                        {\n                          'cart__button--disabled':\n                            quantity === 1,\n                        },\n                      )}\n                      onClick={() => handleMinus(card)}\n                      disabled={quantity === 1}\n                    />\n\n                    <span className=\"cart__count\">\n                      {quantity}\n                    </span>\n\n                    <button\n                      type=\"button\"\n                      className=\"cart__button cart__button--plus\"\n                      onClick={() => handlePlus(card)}\n                    />\n                  </div>\n\n                  <h2 className=\"cart__card-price\">\n                    {`$${price}`}\n                  </h2>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"cart__total\">\n            <h1 className=\"cart__title\">\n              {`$${totalAmount}`}\n            </h1>\n\n            <div className=\"cart__description\" data-cy=\"productQauntity\">\n              {`Total for ${totalQuantity} item${totalQuantity === 1 ? '' : 's'}`}\n            </div>\n\n            <div className=\"cart__line\" />\n\n            <button\n              type=\"button\"\n              className=\"cart__checkout\"\n              onClick={() => setCheckout(true)}\n            >\n              Checkout\n            </button>\n\n            {checkout && (\n              <div className=\"cart__message\">\n                <button\n                  type=\"button\"\n                  className=\"cart__close cart__close--message\"\n                  onClick={() => setCheckout(false)}\n                />\n\n                <p className=\"cart__paragraph\">\n                  We are sorry, but this feature is not implemented yet\n                </p>\n              </div>\n            )}\n          </div>\n        </section>\n      )}\n    </main>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  Link,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Phone } from '../types/Phone';\nimport { DetailPhone } from '../types/DetailPhone';\nimport { getPhone, getPhones } from '../helpers/htmlClient';\nimport { Loader } from '../components/Loader';\nimport { ProductsSlider } from '../components/ProductsSlider';\nimport { Breadcrumbs } from '../components/Breadcrumbs';\nimport { Back } from '../components/Back';\nimport { CardButtons } from '../components/CardButtons';\n\ntype UsableColorType = {\n  black: string,\n  coral: string,\n  gold: string,\n  green: string,\n  midnightgreen: string,\n  purple: string,\n  red: string,\n  rosegold: string,\n  silver: string,\n  spacegray: string,\n  white: string,\n  yellow: string,\n};\n\nconst usableColors: UsableColorType = {\n  black: '#000',\n  coral: '#FF7F50',\n  gold: '#FCDBC1',\n  green: '#87CEFA',\n  midnightgreen: '#5F7170',\n  purple: '#CBB1FF',\n  red: '#F00',\n  rosegold: '#FCBAAA',\n  silver: '#C0C0C0',\n  spacegray: '#4C4C4C',\n  white: '#FFF',\n  yellow: 'yellow',\n};\n\nexport const ProductDetailsPage = () => {\n  const { pathname } = useLocation();\n  const { productId } = useParams();\n  const [card, setCard] = useState<Phone | null>(null);\n  const [product, setProduct] = useState<DetailPhone | null>(null);\n  const [mainImage, setMainImage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    if (!productId) {\n      return;\n    }\n\n    setIsError(false);\n    setIsLoading(true);\n\n    getPhones()\n      .then(res => {\n        const findCard = res.find((item: Phone) => item.phoneId === productId);\n\n        setCard(findCard);\n      });\n\n    getPhone(productId)\n      .then(res => {\n        setProduct(res);\n        setMainImage(res.images[0]);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [productId]);\n\n  const handleColor = (color: string) => {\n    if (!product) {\n      return '..';\n    }\n\n    return `/phones/${product.namespaceId}-${product.capacity.toLowerCase()}-${color}`;\n  };\n\n  const handleCapacity = (capacity: string) => {\n    if (!product) {\n      return '..';\n    }\n\n    return `/phones/${product.namespaceId}-${capacity.toLowerCase()}-${product.color}`;\n  };\n\n  return (\n    <>\n      {isError && (\n        <main className=\"main main--not-found\">\n          <h1 className=\"main__title main__title--development\">\n            Phone was not found\n          </h1>\n          <div className=\"main__text\">\n            Perhaps you would like to navigate to the\n            <Link to={{ pathname: '/' }}>\n              <span className=\"main__span\"> Home page </span>\n            </Link>\n            ?\n          </div>\n        </main>\n      )}\n      {!isError && isLoading && (<Loader />)}\n\n      {!isError && !isLoading && product && (\n        <main className=\"main main--page\">\n          <div className=\"main__header\">\n            <Breadcrumbs currentPage={product.name} />\n\n            <Back />\n\n            <h1 className=\"main__title\">{product.name}</h1>\n          </div>\n\n          <section className=\"main__section detail\">\n            <div className=\"detail__galary galary\">\n              <ul className=\"galary__list\">\n                {product.images.map(image => (\n                  <li key={image} className=\"galary__item\">\n                    <Link\n                      to={{ pathname }}\n                      className={classNames(\n                        'galary__link',\n                        { 'galary__link--selected': image === mainImage },\n                      )}\n                      onClick={() => setMainImage(image)}\n                    >\n                      <img\n                        src={`/_new/${image}`}\n                        alt={image}\n                        className=\"galary__image\"\n                      />\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n\n              <div className=\"galary__main-image\">\n                <img\n                  src={`/_new/${mainImage}`}\n                  alt={mainImage}\n                  className=\"galary__main-image\"\n                />\n              </div>\n            </div>\n\n            <div className=\"detail__right\">\n              <div className=\"detail__info\">\n                <div className=\"detail__wrapper\">\n                  <div className=\"detail__text\">Available colors</div>\n                  <div className=\"detail__colors\">\n                    {product.colorsAvailable.map(color => (\n                      <Link\n                        to={{ pathname: handleColor(color) }}\n                        className={classNames(\n                          'detail__color',\n                          { 'detail__color--active': product.color === color },\n                        )}\n                        key={color}\n                      >\n                        <span\n                          className=\"detail__circle\"\n                          style={{\n                            backgroundColor:\n                              usableColors[color as keyof UsableColorType],\n                          }}\n                        />\n                      </Link>\n                    ))}\n                  </div>\n                  <div className=\"detail__line\" />\n                </div>\n\n                <div className=\"detail__wrapper\">\n                  <div className=\"detail__text\">Select capacity</div>\n                  <div className=\"detail__capacities\">\n                    {product.capacityAvailable.map(capacity => (\n                      <Link\n                        to={{ pathname: handleCapacity(capacity) }}\n                        key={capacity}\n                        className={classNames(\n                          'detail__capacity',\n                          {\n                            'detail__capacity--active':\n                              product.capacity === capacity,\n                          },\n                        )}\n                      >\n                        {capacity.replace('GB', ' GB')}\n                      </Link>\n                    ))}\n                  </div>\n                  <div className=\"detail__line\" />\n                </div>\n\n                <div className=\"detail__price-block\">\n                  <div className=\"detail__prices\">\n                    <div className=\"detail__price\">\n                      {`$${product.priceDiscount}`}\n                    </div>\n                    <div className=\"detail__full-price\">\n                      {`$${product.priceRegular}`}\n                    </div>\n                  </div>\n\n                  {card && (\n                    <CardButtons card={card} info=\"detail\" />\n                  )}\n                </div>\n\n                <div className=\"detail__chars\">\n                  <div className=\"detail__char\">\n                    <div className=\"detail__char-name\">Screen</div>\n                    <div className=\"detail__param\">{product.screen}</div>\n                  </div>\n                  <div className=\"detail__char\">\n                    <div className=\"detail__char-name\">Resolution</div>\n                    <div className=\"detail__param\">\n                      {product.resolution}\n                    </div>\n                  </div>\n                  <div className=\"detail__char\">\n                    <div className=\"detail__char-name\">Processor</div>\n                    <div className=\"detail__param\">\n                      {product.processor}\n                    </div>\n                  </div>\n                  <div className=\"detail__char\">\n                    <div className=\"detail__char-name\">RAM</div>\n                    <div className=\"detail__param\">\n                      {product.ram.replace('GB', ' GB')}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"detail__id\" />\n            </div>\n\n            <div data-cy=\"productDescription\">\n              <h2 className=\"detail__title\">\n                About\n              </h2>\n              <div className=\"detail__about\">\n                <div className=\"detail__line\" />\n                {product.description.map(desc => {\n                  const { text, title } = desc;\n\n                  return (\n                    <div key={title}>\n                      <div className=\"detail__subtitle\">{title}</div>\n                      <div className=\"detail__description\">{text}</div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n\n            <div>\n              <h2\n                className=\"detail__title\"\n              >\n                Tech specs\n              </h2>\n\n              <div className=\"detail__line\" />\n\n              <ul className=\"detail__list\">\n                <li className=\"detail__item\">\n                  <div className=\"detail__description\">Screen</div>\n                  <div>\n                    {product.screen}\n                  </div>\n                </li>\n                <li className=\"detail__item\">\n                  <div className=\"detail__description\">Resolution</div>\n                  <div>\n                    {product.resolution}\n                  </div>\n                </li>\n                <li className=\"detail__item\">\n                  <div className=\"detail__description\">Processor</div>\n                  <div>\n                    {product.processor}\n                  </div>\n                </li>\n                <li className=\"detail__item\">\n                  <div className=\"detail__description\">RAM</div>\n                  <div>\n                    {product.ram}\n                  </div>\n                </li>\n                <li className=\"detail__item\">\n                  <div className=\"detail__description\">Built in memory</div>\n                  <div>\n                    {product.capacity}\n                  </div>\n                </li>\n                <li className=\"detail__item\">\n                  <div className=\"detail__description\">Camera</div>\n                  <div>\n                    {product.camera}\n                  </div>\n                </li>\n                <li className=\"detail__item\">\n                  <div className=\"detail__description\">Zoom</div>\n                  <div>\n                    {product.zoom}\n                  </div>\n                </li>\n                <li className=\"detail__item\">\n                  <div className=\"detail__description\">Cell</div>\n                  <div>\n                    {product.cell.join(', ')}\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </section>\n\n          <section className=\"main__section\">\n            <ProductsSlider section=\"You may also like\" />\n          </section>\n        </main>\n      )}\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport App from './App';\nimport { LocalProvider } from './LocalContext';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PhonesPage } from './pages/PhonesPage';\nimport { TabletsPage } from './pages/TabletsPage';\nimport { AccessoriesPage } from './pages/AccessoriesPage';\nimport { Favorites } from './pages/Favorites';\nimport { Cart } from './pages/Cart';\nimport { ProductDetailsPage } from './pages/ProductDetailsPage';\n\nexport const Root = () => (\n  <Router>\n    <LocalProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"phones\">\n            <Route index element={<PhonesPage />} />\n            <Route path=\":productId\" element={<ProductDetailsPage />} />\n          </Route>\n          <Route path=\"tablets\" element={<TabletsPage />} />\n          <Route path=\"accessories\" element={<AccessoriesPage />} />\n          <Route path=\"favorites\" element={<Favorites />} />\n          <Route path=\"cart\" element={<Cart />} />\n        </Route>\n      </Routes>\n    </LocalProvider>\n  </Router>\n);\n","import ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}